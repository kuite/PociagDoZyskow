// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PociagDoZyskow.DataAccess.Contexts;

namespace PociagDoZyskow.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.Algorithms.AlgorithmResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlgorithmName")
                        .HasColumnName("AlgorithmName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnName("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBuy")
                        .HasColumnName("IsBuy")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("AlgorithmResults");
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExchangeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnName("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.CompanyDataScan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChangePrice")
                        .HasColumnName("ChangePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("HighestPrice")
                        .HasColumnName("HighestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LastPrice")
                        .HasColumnName("LastPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowestPrice")
                        .HasColumnName("LowestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpenPrice")
                        .HasColumnName("OpenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReferencePrice")
                        .HasColumnName("ReferencePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ScanReferenceTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalTransactionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalTransactionVolumeStockCount")
                        .HasColumnName("TotalTransactionVolumeStockCount")
                        .HasColumnType("int");

                    b.Property<int>("TransactionsCount")
                        .HasColumnName("TransactionsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyDataScans");
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnName("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exchanges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "NewConnect",
                            ShortName = "NC"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gielda Papierow Wartosciowych",
                            ShortName = "GPW"
                        });
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.FinancialReportTimeScan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnName("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyTicker")
                        .HasColumnName("CompanyTicker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullCompanyName")
                        .HasColumnName("FullCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnName("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportType")
                        .HasColumnName("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCompanyName")
                        .HasColumnName("ShortCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("FinancialReportTimeDataScans");
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.Algorithms.AlgorithmResult", b =>
                {
                    b.HasOne("PociagDoZyskow.DataAccess.Entities.Company", "Company")
                        .WithMany("AlgorithmResults")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.Company", b =>
                {
                    b.HasOne("PociagDoZyskow.DataAccess.Entities.Exchange", "Exchange")
                        .WithMany("Companies")
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.CompanyDataScan", b =>
                {
                    b.HasOne("PociagDoZyskow.DataAccess.Entities.Company", "Company")
                        .WithMany("CompanyDataScans")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.FinancialReportTimeScan", b =>
                {
                    b.HasOne("PociagDoZyskow.DataAccess.Entities.Company", "Company")
                        .WithMany("FinancialReportTimeScans")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
