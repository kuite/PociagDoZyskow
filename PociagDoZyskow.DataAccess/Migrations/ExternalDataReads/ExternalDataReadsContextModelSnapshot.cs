// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PociagDoZyskow.DataAccess.Contexts;

namespace PociagDoZyskow.DataAccess.Migrations.ExternalDataReads
{
    [DbContext(typeof(ExternalDataReadsContext))]
    partial class ExternalDataReadsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.ExternalDataReads.CompanyDataScan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChangePrice")
                        .HasColumnName("ChangePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("HighestPrice")
                        .HasColumnName("HighestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LastPrice")
                        .HasColumnName("LastPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowestPrice")
                        .HasColumnName("LowestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpenPrice")
                        .HasColumnName("OpenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReferencePrice")
                        .HasColumnName("ReferencePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ScanReferenceTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalTransactionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalTransactionVolumeStockCount")
                        .HasColumnName("TotalTransactionVolumeStockCount")
                        .HasColumnType("int");

                    b.Property<int>("TransactionsCount")
                        .HasColumnName("TransactionsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyDataScans","ExternalDataScans");
                });

            modelBuilder.Entity("PociagDoZyskow.DataAccess.Entities.ExternalDataReads.FinancialReportTimeScan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnName("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyTicker")
                        .HasColumnName("CompanyTicker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullCompanyName")
                        .HasColumnName("FullCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnName("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportType")
                        .HasColumnName("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCompanyName")
                        .HasColumnName("ShortCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinancialReportTimeDataScans","ExternalDataScans");
                });
#pragma warning restore 612, 618
        }
    }
}
